import type {AppProps} from 'next/app';
import {ReactElement, ReactNode, Suspense} from 'react';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import {Provider, useSelector} from 'react-redux';
import Head from 'next/head';
import {PersistGate} from 'redux-persist/integration/react';
import {store, persistor} from '@/store';
import {appWithI18Next} from 'ni18n';
import {ni18nConfig} from 'ni18n.config.ts';
import {ColorSchemeScript, MantineProvider} from '@mantine/core';
import {config} from '@fortawesome/fontawesome-svg-core'
import '@fortawesome/fontawesome-svg-core/styles.css'

config.autoAddCss = false
// Perfect Scrollbar
import 'react-perfect-scrollbar/dist/css/styles.css';
import '@mantine/core/styles.layer.css';
import 'mantine-datatable/styles.layer.css';
import '../styles/tailwind.css';
import {NextPage} from 'next';

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
    getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
    Component: NextPageWithLayout;
};

const App = ({Component, pageProps}: AppPropsWithLayout) => {
    const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);
    // const {isDarkMode, theme} = store.getState().themeConfig;

    return (
        <Provider store={store}>
            <PersistGate loading={null} persistor={persistor}>
                <Head>
                    <title>Flaxen ERP</title>
                    <meta charSet="UTF-8"/>
                    <meta httpEquiv="X-UA-Compatible" content="IE=edge"/>
                    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
                    <meta name="description" content="Generated by create next app"/>
                    <link rel="icon" href="/favicon.png"/>
                    {/*<ColorSchemeScript defaultColorScheme={isDarkMode ? "dark" : "light"}/>*/}
                </Head>
                <MantineProvider defaultColorScheme={"light"}>
                    {getLayout(<Component {...pageProps} />)}
                </MantineProvider>
            </PersistGate>

        </Provider>
    );
};
export default appWithI18Next(App, ni18nConfig);
